- 스웜모드
- 서비스 생성 부분 명령어 : ububntu이미지이름 그담 명령어 sleep 1 (1초마다)

- nginx 서비스 생성 : 복제 하고 포트번호 주어야 웹이니까

- overaynetwork 분산되어 있는 컨테이너를 연결해줌
- 결론 : 스웜 클러스터 내의 어떤 노드로 접근해도 같은 서비스 접근이 가능
- 해당 컨테이너(엔진엑스)가 없더라도 노드로 접근하면 서비스 가능

- 서비스 모드
- 복제 모드: 가장 일반적, 레플리카 수 정해 그만큼 컨테이너 만듦
- 글로벌 모드: 모든 노드에 컨테이너 반드시 하나씩 생성, 스웜 클러스터를 모니터링 할 때 사용
- docker service create --mode global 명령으로 생성

- 서비스는 장애 복구 기능 있음
- 복제 모드 설정된 서비스 컨티이너가 정지하거나 특정 노드가 다운되면 스웜 매니저는 새로운 컨테이너 생성해 자동으로 복구
- #1 해당 노드 컨테이너가 죽으면 다른 노드에 커넽이너 다시 생성됨

- #2 특정 노드 다운 , 다른 노드에 컨테이너 생성

- 다운되었던 노드 재시작 해도 리밸런싱 안함
- 다른 노드에 분산하고 싶으면 scale 조정

- 서비스 롤링 업데이트
- 기존에 있던 서비스를 순차적으로 내린다(한 노드가 끝나야 다음 노드가 실행됨 ..즉 업데이트가)

- 근데, 업데이트 주기, 업데이트 컨테이너 개수, 업데이트 실패했을경우 how to 이런것들을 설정 가능 

- 개별 컨테이너 동작 시키려면 -v, -e 옵션을사용하는 것은 스웜모드에서 비효율적 - 그이유는 컨테이너 분산되어있고
- 스웜은 동시에여러개 컨테이너 다룸, 

- 스웜모드에서 클러스터에게 파일 공유 방법 secret, nginx사용 
- secret source : secret 정보를 컨테이너 안으로 전달
- e는 컨테이너 내부의 활용변수 활용, 명령어 실행 ㅣ부분에는 패스워드가 노출되지 않음
- config.yml을 registry에 전달하고자 함
- -v옵션을쓰면 팡리을 모든 노드에 써야, -e옵션은 보안문제가, config를쓰면 매니저노드에만 만들면 다른 노드와 공유 가능
- 특히 이부분은 암호화 파일 다룰때 사용

- ingress 네트워크
- 스웜모드에서 자동 노드밸런싱해주는 네트워크
- #2-4는 ingress쓰면 어떤 노등로 접근해도 되는데 , 안쓰면 특정 노드로만 접근해야 함

- 오버레이 네트워크
- odcker_gwbride는 외부로 나갈때의 gw 

- 스웜 모드는 서비스 발견 기능이 있어서 서비스 이름으로 컨테이너에 접근 가능 =? ip 알 필요 없음

vagrant@swarm-manager:~$ docker run -it --name test -v test 아펭있는컨테이너, 뒤에는 


# 수업
-  docker node update --label-add storage=ssd swarm-worker1
-                                  라벨이름키이름=밸루
- 라밸운서비스제약조건 줄떄 사용, 보통은 라운드로빈 방식임, 근데 운영하다보면 특정 노드만 서비스 주고 싶음 이때 라벨 사용


- 쿠버네티스
- 대부분의 리소스는 오브젝트
- kubectl, yaml 이용 파일 정의해서 쿠버네티스 활용

- 포드: 컨테이너 애플리케인션 = 서비스가 가능하도록하나로묶어놈, 컨테이너는 독립된 모듈을 만드른ㄴ 것이 좋다
- 1개 이상의 컨테이너로 구성된 컨테이너의 집합
- 워드와 마이에스큐엘 이란 두개의 컨테이너로 구성 -> 나중에 서비스 제공할때 두개를 묶어야 -> 이단위 포드
- 여러개의 컨테이너르  추상화해서 하나의 애플리케이션으로 동작하도록 묶어놓은 컨테이너의 묶음

-- --rm  중지되면 삭제 ?

- 네트워크 구성하지 않아도 포드 사용하면 하나의 포드 내부의 컨테이너들은 네트워크 같은 리눅스 네임스페이스 공유
- pod는 서비스 공유..에 컨테이너를 추상화 ??? 팟 안에 왜 컨테이너 넣냐?
- 팟은 1개만 컨테이너 넣어도 됨, 왜 ? 팟 만들지? 왜냐구? 서비스를 위해 컨테이너 여러개 조합해야 하는 경우가 있고 컨테이너와 컨테이너간의 연계를 쉽게 하기 위해 팟 나옴
- 그래야 서비스에 집중 할 수 있으니껭
